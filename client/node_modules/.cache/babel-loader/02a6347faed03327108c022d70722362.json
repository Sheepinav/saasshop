{"ast":null,"code":"var _jsxFileName = \"/Users/Abhinav/Documents/GitHub/saasshop/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider, Connect } from \"react-redux\";\nimport authReducer from \"./store/reducers/auth\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() || compose;\nconst appReducer = combineReducers({\n  auth: authReducer\n});\n\nconst rootReducer = (state, action) => {\n  if (action.type === \"CREATE_TEMPLATE\") {\n    state.template = undefined;\n  }\n\n  return appReducer(state, action);\n};\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}))), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/Abhinav/Documents/GitHub/saasshop/src/index.js"],"names":["React","ReactDOM","serviceWorker","BrowserRouter","createStore","applyMiddleware","compose","combineReducers","thunk","Provider","Connect","authReducer","App","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","__REDUX_DEVTOOLS_EXTENSION__","appReducer","auth","rootReducer","state","action","type","template","undefined","store","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,aAAlC;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,kCAAP;AAEA,MAAMC,gBAAgB,GACpBC,MAAM,CAACC,oCAAP,IACCD,MAAM,CAACE,4BAAP,IACCF,MAAM,CAACE,4BAAP,EAFF,IAGAV,OAJF;AAMA,MAAMW,UAAU,GAAGV,eAAe,CAAC;AACjCW,EAAAA,IAAI,EAAEP;AAD2B,CAAD,CAAlC;;AAIA,MAAMQ,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,iBAApB,EAAuC;AACrCF,IAAAA,KAAK,CAACG,QAAN,GAAiBC,SAAjB;AACD;;AACD,SAAOP,UAAU,CAACG,KAAD,EAAQC,MAAR,CAAjB;AACD,CALD;;AAOA,MAAMI,KAAK,GAAGrB,WAAW,CACvBe,WADuB,EAEvBN,gBAAgB,CAACR,eAAe,CAACG,KAAD,CAAhB,CAFO,CAAzB;AAKAP,QAAQ,CAACyB,MAAT,CACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,EAMEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,E,CASA;AACA;AACA;;AACA1B,aAAa,CAAC2B,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider, Connect } from \"react-redux\";\nimport authReducer from \"./store/reducers/auth\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nconst composeEnhancers =\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ||\n  (window.__REDUX_DEVTOOLS_EXTENSION__ &&\n    window.__REDUX_DEVTOOLS_EXTENSION__()) ||\n  compose;\n\nconst appReducer = combineReducers({\n  auth: authReducer,\n});\n\nconst rootReducer = (state, action) => {\n  if (action.type === \"CREATE_TEMPLATE\") {\n    state.template = undefined;\n  }\n  return appReducer(state, action);\n};\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}