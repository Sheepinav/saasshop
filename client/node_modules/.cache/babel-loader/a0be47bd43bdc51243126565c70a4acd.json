{"ast":null,"code":"var _jsxFileName = \"/Users/Abhinav/Documents/GitHub/saasshop/src/containers/ShopHome.jsx\";\nimport React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport NavBar from \"../components/NavBar/NavBar\";\nimport Shop from \"../components/Shop/Shop\";\nimport Cart from \"../components/Cart/Cart\";\nimport AdminUI from \"../components/Admin/AdminUI\";\nimport UserUI from \"../components/User/UserUI\";\nimport AddMerch from \"../components/Admin/AddMerch\";\nimport \"./ShopHome.css\";\nimport SignIn from \"../components/SignIn/SignIn\";\nimport Zoomer from \"../assets/images/shirts/zoomer.png\";\nimport Logo from \"../assets/images/stickers/SAAS_logo.png\";\nimport firebase from \"../firebase/firebase\";\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions/index.js';\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nclass ShopHome extends Component {\n  constructor(props) {\n    super(props);\n\n    this.pullShopItems = () => {\n      firebase.firestore().collection(\"inventory\").get().then(snapshot => {\n        snapshot.forEach(item => {\n          const data = this.state.data;\n          data[item.id] = item.data();\n          this.setState({\n            data\n          });\n        });\n      });\n    };\n\n    this.handleOnPullShopItems = () => {\n      this.props.onPullShopItems();\n    };\n\n    this.pullAdminEmails = () => {\n      firebase.firestore().collection(\"admin\").doc(\"emails\").get().then(snapshot => {\n        const data = snapshot.data();\n        this.setState({\n          adminEmailList: data.email_list\n        });\n      });\n    };\n\n    this.pullPastOrders = () => {\n      firebase.firestore().collection(\"orders\").get().then(snapshot => {\n        snapshot.forEach(order => {\n          const orders = this.state.orders;\n          orders[order.id] = order.data();\n          this.setState({\n            orders\n          });\n        });\n      });\n    };\n\n    this.firebasePush = item => {\n      console.log(item.image);\n      const ref = firebase.storage().ref();\n      const name = item.description;\n      const newRef = ref.child(name + \".png\");\n      newRef.put(item.image).then(() => {\n        newRef.getDownloadURL().then(url => {\n          console.log(url);\n          const newInventory = {\n            category: item.category,\n            description: item.description,\n            image_url: url,\n            on_order: 0,\n            sales_price: item.price,\n            size_stock: {},\n            sizes: [],\n            stock: item.quantity\n          };\n          firebase.firestore().collection(\"inventory\").add(newInventory);\n        });\n      });\n    };\n\n    this.onChange = (itemId, direction) => {\n      console.log(this.state.data[itemId]);\n      console.log(this.props.itemData.itemID);\n      const cart = this.state.currentCart;\n      const currentCart = cart[itemId] ? cart[itemId] : 0;\n      const stock = this.state.data[itemId].stock;\n      let updatedCount = currentCart + direction < 0 ? 0 : currentCart + direction;\n\n      if (updatedCount > stock) {\n        updatedCount = stock;\n        alert(\"Cannot add item to cart. Max stock of item reached.\");\n      }\n\n      cart[itemId] = updatedCount;\n      this.setState({\n        cart\n      });\n    };\n\n    this.calculateNumItems = (currentCart, items) => {\n      let total = 0;\n      Object.keys(items).forEach(key => {\n        total += currentCart[key] ? currentCart[key] : 0;\n      });\n      return total;\n    };\n\n    this.calculateTotalPrice = (currentCart, items) => {\n      let total = 0;\n      Object.keys(items).forEach(key => {\n        total += items[key].sales_price * (currentCart[key] ? currentCart[key] : 0);\n      });\n      return total.toFixed(2);\n    };\n\n    this.updateStock = (itemId, direction) => {\n      const data = this.state.data;\n      const currentStock = this.state.data[itemId].stock;\n      let updatedCount = currentStock + direction < 0 ? 0 : currentStock + direction;\n      data[itemId].stock = updatedCount; //need to actually update firebase\n\n      console.log(data[itemId].stock);\n      this.setState({\n        data\n      });\n    };\n\n    this.logOut = () => {\n      console.log(\"log out\");\n      firebase.auth().signOut();\n    };\n\n    this.logIn = () => {\n      console.log(\"log in\");\n      firebase.auth().signInWithRedirect(provider);\n    };\n\n    this.state = {\n      data: {},\n      currentCart: {},\n      orders: {},\n      adminEmailList: [],\n      auth: null\n    };\n    firebase.auth().onAuthStateChanged(user => {\n      //console.log(user);\n      this.setState({\n        auth: user\n      });\n    });\n    this.logOut = this.logOut.bind(this);\n    this.logIn = this.logIn.bind(this);\n  }\n\n  componentDidMount() {\n    this.pullShopItems();\n    this.pullPastOrders();\n    this.pullAdminEmails();\n    this.handleOnPullShopItems();\n  } //FOR THIS COMPONENT\n\n\n  render() {\n    //bottom two return the same data\n    //console.log(this.props.itemData)\n    //console.log(this.state.data)\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      items: this.props.itemData,\n      onChange: this.onChange,\n      currentCart: this.state.currentCart,\n      calculateTotalPrice: this.calculateTotalPrice,\n      calculateNumItems: this.calculateNumItems,\n      logIn: this.logIn,\n      logOut: this.logOut,\n      auth: this.state.auth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"gradient-divide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(Shop, {\n        onChange: this.onChange,\n        items: this.props.itemData,\n        currentCart: this.state.currentCart,\n        auth: this.state.auth,\n        adminEmailList: this.state.adminEmailList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => React.createElement(SignIn, {\n        onChange: this.onChange,\n        items: this.props.itemData,\n        currentCart: this.state.currentCart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/cart\",\n      render: props => React.createElement(Cart, Object.assign({}, props, {\n        items: this.state.data,\n        currentCart: this.state.currentCart,\n        onChange: this.onChange,\n        calculateTotalPrice: this.calculateTotalPrice,\n        calculateNumItems: this.calculateNumItems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/user\",\n      render: props => React.createElement(UserUI, Object.assign({}, props, {\n        items: this.state.data,\n        orders: this.state.orders,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/admin\",\n      render: props => React.createElement(AdminUI, Object.assign({}, props, {\n        items: this.state.data,\n        updateStock: this.updateStock,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/addmerch\",\n      render: props => React.createElement(AddMerch, Object.assign({}, props, {\n        firebasePush: this.firebasePush,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    itemData: state.shop.items //authRedirectPath: state.auth.authRedirectPath\n\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onPullShopItems: () => dispatch(actions.pullShopItems())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopHome);","map":{"version":3,"sources":["/Users/Abhinav/Documents/GitHub/saasshop/src/containers/ShopHome.jsx"],"names":["React","Component","Route","Redirect","NavBar","Shop","Cart","AdminUI","UserUI","AddMerch","SignIn","Zoomer","Logo","firebase","connect","actions","provider","auth","GoogleAuthProvider","ShopHome","constructor","props","pullShopItems","firestore","collection","get","then","snapshot","forEach","item","data","state","id","setState","handleOnPullShopItems","onPullShopItems","pullAdminEmails","doc","adminEmailList","email_list","pullPastOrders","order","orders","firebasePush","console","log","image","ref","storage","name","description","newRef","child","put","getDownloadURL","url","newInventory","category","image_url","on_order","sales_price","price","size_stock","sizes","stock","quantity","add","onChange","itemId","direction","itemData","itemID","cart","currentCart","updatedCount","alert","calculateNumItems","items","total","Object","keys","key","calculateTotalPrice","toFixed","updateStock","currentStock","logOut","signOut","logIn","signInWithRedirect","onAuthStateChanged","user","bind","componentDidMount","render","mapStateToProps","shop","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport NavBar from \"../components/NavBar/NavBar\";\nimport Shop from \"../components/Shop/Shop\";\nimport Cart from \"../components/Cart/Cart\";\nimport AdminUI from \"../components/Admin/AdminUI\";\nimport UserUI from \"../components/User/UserUI\";\nimport AddMerch from \"../components/Admin/AddMerch\";\nimport \"./ShopHome.css\";\nimport SignIn from \"../components/SignIn/SignIn\";\nimport Zoomer from \"../assets/images/shirts/zoomer.png\";\nimport Logo from \"../assets/images/stickers/SAAS_logo.png\";\nimport firebase from \"../firebase/firebase\";\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions/index.js';\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nclass ShopHome extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: {},\n      currentCart: {},\n      orders: {},\n      adminEmailList: [],\n      auth: null,\n    };\n    firebase.auth().onAuthStateChanged((user) => {\n      //console.log(user);\n      this.setState({ auth: user });\n    });\n\n    this.logOut = this.logOut.bind(this);\n    this.logIn = this.logIn.bind(this);\n  }\n\n  componentDidMount() {\n    this.pullShopItems();\n    this.pullPastOrders();\n    this.pullAdminEmails();\n    this.handleOnPullShopItems();\n  }\n\n  //FOR THIS COMPONENT\n  pullShopItems = () => {\n    firebase\n      .firestore()\n      .collection(\"inventory\")\n      .get()\n      .then((snapshot) => {\n        snapshot.forEach((item) => {\n          const data = this.state.data;\n          data[item.id] = item.data();\n          this.setState({ data });\n        });\n      });\n  };\n\n  //FOR REDUX\n  handleOnPullShopItems = () => {\n    this.props.onPullShopItems();\n  }\n\n  pullAdminEmails = () => {\n    firebase\n      .firestore()\n      .collection(\"admin\")\n      .doc(\"emails\")\n      .get()\n      .then((snapshot) => {\n        const data = snapshot.data();\n        this.setState({ adminEmailList: data.email_list });\n      });\n  };\n\n  pullPastOrders = () => {\n    firebase\n      .firestore()\n      .collection(\"orders\")\n      .get()\n      .then((snapshot) => {\n        snapshot.forEach((order) => {\n          const orders = this.state.orders;\n          orders[order.id] = order.data();\n          this.setState({ orders });\n        });\n      });\n  };\n\n  firebasePush = (item) => {\n    console.log(item.image);\n    const ref = firebase.storage().ref();\n    const name = item.description;\n    const newRef = ref.child(name + \".png\");\n    newRef.put(item.image).then(() => {\n      newRef.getDownloadURL().then((url) => {\n        console.log(url);\n        const newInventory = {\n          category: item.category,\n          description: item.description,\n          image_url: url,\n          on_order: 0,\n          sales_price: item.price,\n          size_stock: {},\n          sizes: [],\n          stock: item.quantity,\n        };\n\n        firebase.firestore().collection(\"inventory\").add(newInventory);\n      });\n    });\n  };\n\n  // Function to update the quantity of an item in cart\n  onChange = (itemId, direction) => {\n    console.log(this.state.data[itemId])\n    console.log(this.props.itemData.itemID)\n    const cart = this.state.currentCart;\n    const currentCart = cart[itemId] ? cart[itemId] : 0;\n    const stock = this.state.data[itemId].stock;\n    let updatedCount =\n      currentCart + direction < 0 ? 0 : currentCart + direction;\n    if (updatedCount > stock) {\n      updatedCount = stock;\n      alert(\"Cannot add item to cart. Max stock of item reached.\");\n    }\n    cart[itemId] = updatedCount;\n    this.setState({ cart });\n  };\n\n  // Function to calculate the total number of items in cart\n  calculateNumItems = (currentCart, items) => {\n    let total = 0;\n\n    Object.keys(items).forEach((key) => {\n      total += currentCart[key] ? currentCart[key] : 0;\n    });\n\n    return total;\n  };\n\n  // Function to calculate total price of items in cart\n  calculateTotalPrice = (currentCart, items) => {\n    let total = 0;\n\n    Object.keys(items).forEach((key) => {\n      total +=\n        items[key].sales_price * (currentCart[key] ? currentCart[key] : 0);\n    });\n\n    return total.toFixed(2);\n  };\n\n  // Function to update the quantity of an item in stock (admin only)\n  // THIS DOESN'T FULLY WORK LOL\n  updateStock = (itemId, direction) => {\n    const data = this.state.data;\n    const currentStock = this.state.data[itemId].stock;\n    let updatedCount =\n      currentStock + direction < 0 ? 0 : currentStock + direction;\n    data[itemId].stock = updatedCount;\n    //need to actually update firebase\n    console.log(data[itemId].stock);\n    this.setState({ data });\n  };\n\n  logOut = () => {\n    console.log(\"log out\");\n    firebase.auth().signOut();\n  };\n\n  logIn = () => {\n    console.log(\"log in\");\n    firebase.auth().signInWithRedirect(provider);\n  };\n\n  render() {\n    //bottom two return the same data\n    //console.log(this.props.itemData)\n    //console.log(this.state.data)\n    return (\n      <React.Fragment>\n        <NavBar\n          items={this.props.itemData}\n          onChange={this.onChange}\n          currentCart={this.state.currentCart}\n          calculateTotalPrice={this.calculateTotalPrice}\n          calculateNumItems={this.calculateNumItems}\n          logIn={this.logIn}\n          logOut={this.logOut}\n          auth={this.state.auth}\n        />\n        <div className=\"gradient-divide\"></div>\n        <Route\n          exact\n          path=\"/\"\n          render={(props) => (\n            <Shop\n              onChange={this.onChange}\n              items={this.props.itemData}\n              currentCart={this.state.currentCart}\n              auth={this.state.auth}\n              adminEmailList={this.state.adminEmailList}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/signin\"\n          render={() => (\n            <SignIn\n            onChange={this.onChange}\n              items={this.props.itemData}\n              currentCart={this.state.currentCart}\n            />\n          )}\n        />\n        <Route\n          path=\"/cart\"\n          render={(props) => (\n            <Cart\n              {...props}\n              items={this.state.data}\n              currentCart={this.state.currentCart}\n              onChange={this.onChange}\n              calculateTotalPrice={this.calculateTotalPrice}\n              calculateNumItems={this.calculateNumItems}\n            />\n          )}\n        />\n\n        <Route\n          path=\"/user\"\n          render={(props) => (\n            <UserUI\n              {...props}\n              items={this.state.data}\n              orders={this.state.orders}\n            />\n          )}\n        />\n        <Route\n          path=\"/admin\"\n          render={(props) => (\n            <AdminUI\n              {...props}\n              items={this.state.data}\n              updateStock={this.updateStock}\n            />\n          )}\n        />\n\n        <Route\n          path=\"/addmerch\"\n          render={(props) => (\n            <AddMerch {...props} firebasePush={this.firebasePush} />\n          )}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    itemData: state.shop.items\n      //authRedirectPath: state.auth.authRedirectPath\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onPullShopItems: () => dispatch(actions.pullShopItems())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopHome);\n"]},"metadata":{},"sourceType":"module"}