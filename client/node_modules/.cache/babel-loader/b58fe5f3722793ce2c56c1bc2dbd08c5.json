{"ast":null,"code":"var _jsxFileName = \"/Users/Abhinav/Documents/GitHub/saasshop/src/components/Cart/Cart.jsx\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport CartItem from \"./CartItem/CartItem.jsx\";\nimport CartItemSummary from \"./CartItemSummary/CartItemSummary.jsx\";\nimport \"./Cart.css\";\nimport firebase from \"../../firebase/firebase\";\nimport Gift from \"../../assets/images/gift.png\";\nimport { TextField } from '@material-ui/core';\n\nclass Cart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.renderItems = (items, currentCart, onChange, calculateNumItems) => {\n      if (calculateNumItems(currentCart, items) === 0) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, \"Your cart is empty!\");\n      } else {\n        return Object.keys(items).map(key => React.createElement(CartItem, {\n          key: key,\n          itemId: key,\n          quantity: currentCart[key],\n          item: items[key],\n          onChange: onChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }));\n      }\n    };\n\n    this.renderItemsSummary = (items, currentCart, onChange, calculateNumItems) => {\n      if (calculateNumItems(currentCart, items) === 0) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \"Your cart is empty!\");\n      } else {\n        return Object.keys(items).map(key => React.createElement(CartItemSummary, {\n          key: key,\n          itemId: key,\n          quantity: currentCart[key],\n          item: items[key],\n          onChange: onChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }));\n      }\n    };\n\n    this.submitForm = event => {\n      event.preventDefault(); // Do not save if cart is empty\n\n      const {\n        items,\n        currentCart\n      } = this.props;\n\n      if (this.props.calculateNumItems(currentCart, items) === 0) {\n        document.querySelector(\"#emptyCart\").style.display = \"block\";\n        setTimeout(() => {\n          document.querySelector(\"#emptyCart\").style.display = \"none\";\n        }, 3000);\n        return;\n      } // Get form values\n\n\n      let name = this.getInputVal(\"name\");\n      let email = this.getInputVal(\"email\");\n      let venmo = document.getElementById(\"venmo\").checked;\n      let payment = venmo ? \"venmo\" : \"card\"; // Save order and show summary\n\n      this.saveOrder(name, email, payment, items, currentCart);\n      this.showAlert();\n    };\n\n    this.getInputVal = id => {\n      return document.getElementById(id).value;\n    };\n\n    this.componentDidMount = () => {\n      document.getElementById(\"paymentForm\").addEventListener(\"submit\", this.submitForm); // Reference orders collection\n\n      const ordersRef = firebase.firestore().collection(\"orders\");\n      this.setState({\n        ordersRef\n      });\n    };\n\n    this.saveOrder = (name, email, payment, items, currentCart) => {\n      this.state.ordersRef.add({\n        name: name,\n        email: email,\n        date: new Date(),\n        payment_method: payment,\n        items: currentCart,\n        total: this.calculateTotalPrice(currentCart, items)\n      }); //TODO: update on_order in inventory?\n    };\n\n    this.showAlert = () => {\n      document.querySelector(\".alert\").style.display = \"block\";\n      document.querySelector(\".container\").style.display = \"none\";\n    };\n  }\n\n  render() {\n    const {\n      items,\n      currentCart,\n      onChange,\n      calculateTotalPrice,\n      calculateNumItems\n    } = this.props;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Your Shopping Cart\"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, this.renderItems(items, currentCart, onChange, calculateNumItems)), React.createElement(\"div\", {\n      className: \"col-lg-5 offset-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"SUBTOTAL\"), \" $\", calculateTotalPrice(currentCart, items)), React.createElement(\"form\", {\n      id: \"paymentForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Name\"), React.createElement(TextField, {\n      id: \"name\",\n      type: \"text\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      name: \"email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"paymentMethod\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"payment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Payment Method\"), React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"venmo\",\n      name: \"payment\",\n      value: \"venmo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"venmo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Venmo\"), React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"card\",\n      name: \"payment\",\n      value: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Card\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"If you selected Venmo, please Venmo $\", calculateTotalPrice(currentCart, items), \" to @calsaas.\"), React.createElement(\"button\", {\n      className: \"submitButton\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"p\", {\n      id: \"emptyCart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Your cart is empty! Please add some items to your cart before submitting.\"))))), React.createElement(\"div\", {\n      className: \"alert container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Your Order Summary\"), React.createElement(\"p\", {\n      style: {\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"SUBTOTAL\"), \" $\", calculateTotalPrice(currentCart, items)), this.renderItemsSummary(items, currentCart, onChange, calculateNumItems)), React.createElement(\"div\", {\n      className: \"col-lg-5 offset-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        color: \"#ADDEFF\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Thank you!\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Your order has been received! We will send you a confirmation email, and you will receive another email when your order is ready for pickup. Thank you for shopping with us!\"), React.createElement(\"img\", {\n      src: Gift,\n      alt: \"gift\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nCart.propTypes = {\n  items: PropTypes.object,\n  currentCart: PropTypes.object,\n  onChange: PropTypes.func\n};\nexport default Cart;","map":{"version":3,"sources":["/Users/Abhinav/Documents/GitHub/saasshop/src/components/Cart/Cart.jsx"],"names":["React","Component","PropTypes","CartItem","CartItemSummary","firebase","Gift","TextField","Cart","state","renderItems","items","currentCart","onChange","calculateNumItems","Object","keys","map","key","renderItemsSummary","submitForm","event","preventDefault","props","document","querySelector","style","display","setTimeout","name","getInputVal","email","venmo","getElementById","checked","payment","saveOrder","showAlert","id","value","componentDidMount","addEventListener","ordersRef","firestore","collection","setState","add","date","Date","payment_method","total","calculateTotalPrice","render","textAlign","color","propTypes","object","func"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport CartItem from \"./CartItem/CartItem.jsx\";\nimport CartItemSummary from \"./CartItemSummary/CartItemSummary.jsx\";\nimport \"./Cart.css\";\nimport firebase from \"../../firebase/firebase\";\nimport Gift from \"../../assets/images/gift.png\";\nimport { TextField } from '@material-ui/core';\n\nclass Cart extends Component {\n  state = {};\n\n  // Function to display items in cart before submit\n  renderItems = (items, currentCart, onChange, calculateNumItems) => {\n    if (calculateNumItems(currentCart, items) === 0) {\n      return <p>Your cart is empty!</p>;\n    } else {\n      return Object.keys(items).map((key) => (\n        <CartItem\n          key={key}\n          itemId={key}\n          quantity={currentCart[key]}\n          item={items[key]}\n          onChange={onChange}\n        />\n      ));\n    }\n  };\n\n  // Function to display items in cart after submit\n  renderItemsSummary = (items, currentCart, onChange, calculateNumItems) => {\n    if (calculateNumItems(currentCart, items) === 0) {\n      return <p>Your cart is empty!</p>;\n    } else {\n      return Object.keys(items).map((key) => (\n        <CartItemSummary\n          key={key}\n          itemId={key}\n          quantity={currentCart[key]}\n          item={items[key]}\n          onChange={onChange}\n        />\n      ));\n    }\n  };\n\n  // Listen for form submit\n  submitForm = (event) => {\n    event.preventDefault();\n\n    // Do not save if cart is empty\n    const { items, currentCart } = this.props;\n    if (this.props.calculateNumItems(currentCart, items) === 0) {\n      document.querySelector(\"#emptyCart\").style.display = \"block\";\n      setTimeout(() => {\n        document.querySelector(\"#emptyCart\").style.display = \"none\";\n      }, 3000);\n      return;\n    }\n\n    // Get form values\n    let name = this.getInputVal(\"name\");\n    let email = this.getInputVal(\"email\");\n    let venmo = document.getElementById(\"venmo\").checked;\n    let payment = venmo ? \"venmo\" : \"card\";\n\n    // Save order and show summary\n    this.saveOrder(name, email, payment, items, currentCart);\n    this.showAlert();\n  };\n\n  // Function to get form values\n  getInputVal = (id) => {\n    return document.getElementById(id).value;\n  };\n\n  componentDidMount = () => {\n    document\n      .getElementById(\"paymentForm\")\n      .addEventListener(\"submit\", this.submitForm);\n    // Reference orders collection\n    const ordersRef = firebase.firestore().collection(\"orders\");\n    this.setState({ ordersRef });\n  };\n\n  // Save order to firebase\n  saveOrder = (name, email, payment, items, currentCart) => {\n    this.state.ordersRef.add({\n      name: name,\n      email: email,\n      date: new Date(),\n      payment_method: payment,\n      items: currentCart,\n      total: this.calculateTotalPrice(currentCart, items),\n    });\n    //TODO: update on_order in inventory?\n  };\n\n  // Show thank you + order summary page after submit\n  showAlert = () => {\n    document.querySelector(\".alert\").style.display = \"block\";\n    document.querySelector(\".container\").style.display = \"none\";\n  };\n\n  render() {\n    const {\n      items,\n      currentCart,\n      onChange,\n      calculateTotalPrice,\n      calculateNumItems,\n    } = this.props;\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <h1>Your Shopping Cart</h1>\n          <div className=\"row\">\n            <div className=\"col-lg-6\">\n              {this.renderItems(\n                items,\n                currentCart,\n                onChange,\n                calculateNumItems\n              )}\n            </div>\n            <div className=\"col-lg-5 offset-1\">\n              <p style={{ textAlign: \"right\" }}>\n                <strong>SUBTOTAL</strong> $\n                {calculateTotalPrice(currentCart, items)}\n              </p>\n              <form id=\"paymentForm\">\n                <label htmlFor=\"name\">Name</label>\n                <TextField id=\"name\" type=\"text\" required />\n                <br></br>\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\" id=\"email\" name=\"email\" required></input>\n                <br></br>\n                <div className=\"paymentMethod\">\n                  <label htmlFor=\"payment\">Payment Method</label>\n                  <input\n                    type=\"radio\"\n                    id=\"venmo\"\n                    name=\"payment\"\n                    value=\"venmo\"\n                  ></input>\n                  <label htmlFor=\"venmo\">Venmo</label>\n\n                  <input\n                    type=\"radio\"\n                    id=\"card\"\n                    name=\"payment\"\n                    value=\"card\"\n                  ></input>\n                  <label htmlFor=\"card\">Card</label>\n                  <br></br>\n                </div>\n\n                <p>\n                  If you selected Venmo, please Venmo $\n                  {calculateTotalPrice(currentCart, items)} to @calsaas.\n                </p>\n                <button className=\"submitButton\" type=\"submit\">\n                  Submit\n                </button>\n                <p id=\"emptyCart\">\n                  Your cart is empty! Please add some items to your cart before\n                  submitting.\n                </p>\n              </form>\n            </div>\n          </div>\n        </div>\n        <div className=\"alert container\">\n          <div className=\"row\">\n            <div className=\"col-lg-6\">\n              <h1>Your Order Summary</h1>\n              <p style={{ textAlign: \"right\" }}>\n                <strong>SUBTOTAL</strong> $\n                {calculateTotalPrice(currentCart, items)}\n              </p>\n              {this.renderItemsSummary(\n                items,\n                currentCart,\n                onChange,\n                calculateNumItems\n              )}\n            </div>\n            <div className=\"col-lg-5 offset-1\">\n              <h1 style={{ color: \"#ADDEFF\" }}>Thank you!</h1>\n              <p>\n                Your order has been received! We will send you a confirmation\n                email, and you will receive another email when your order is\n                ready for pickup. Thank you for shopping with us!\n              </p>\n              <img src={Gift} alt=\"gift\" />\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nCart.propTypes = {\n  items: PropTypes.object,\n  currentCart: PropTypes.object,\n  onChange: PropTypes.func,\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}