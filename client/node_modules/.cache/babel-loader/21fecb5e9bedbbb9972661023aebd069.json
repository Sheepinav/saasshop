{"ast":null,"code":"var _jsxFileName = \"/Users/Abhinav/Documents/GitHub/saasshop/src/components/Cart/CartItem/CartItem.jsx\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./CartItem.css\";\n\nclass CartItem extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    const {\n      itemId,\n      onChange,\n      item,\n      quantity\n    } = this.props;\n    const {\n      description,\n      image_url,\n      sales_price\n    } = item;\n\n    if (!quantity || quantity === 0) {\n      return null;\n    }\n\n    return React.createElement(\"div\", {\n      className: \"cartItemDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: image_url,\n      alt: \"cart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, description), React.createElement(\"button\", {\n      onClick: () => onChange(itemId, -1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"-\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, quantity), React.createElement(\"button\", {\n      onClick: () => onChange(itemId, 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"+\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"$\", sales_price, \" ea.\"));\n  }\n\n}\n\nCartItem.propTypes = {\n  itemId: PropTypes.string,\n  onChange: PropTypes.func,\n  item: PropTypes.shape({\n    description: PropTypes.string,\n    image_url: PropTypes.string,\n    sales_price: PropTypes.number\n  }),\n  quantity: PropTypes.number\n};\nexport default CartItem;","map":{"version":3,"sources":["/Users/Abhinav/Documents/GitHub/saasshop/src/components/Cart/CartItem/CartItem.jsx"],"names":["React","Component","PropTypes","CartItem","state","render","itemId","onChange","item","quantity","props","description","image_url","sales_price","propTypes","string","func","shape","number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,gBAAP;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BG,KAD+B,GACvB,EADuB;AAAA;;AAG/BC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,QAAV;AAAoBC,MAAAA,IAApB;AAA0BC,MAAAA;AAA1B,QAAuC,KAAKC,KAAlD;AACA,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA,SAAf;AAA0BC,MAAAA;AAA1B,QAA0CL,IAAhD;;AACA,QAAI,CAACC,QAAD,IAAaA,QAAQ,KAAK,CAA9B,EAAiC;AAC/B,aAAO,IAAP;AACD;;AACD,WACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAEG,SAAV;AAAqB,MAAA,GAAG,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOD,WAAP,CAFF,EAGE;AAAQ,MAAA,OAAO,EAAE,MAAMJ,QAAQ,CAACD,MAAD,EAAS,CAAC,CAAV,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOG,QAAP,CAJF,EAKE;AAAQ,MAAA,OAAO,EAAE,MAAMF,QAAQ,CAACD,MAAD,EAAS,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAQO,WAAR,SANF,CADF;AAUD;;AAnB8B;;AAsBjCV,QAAQ,CAACW,SAAT,GAAqB;AACnBR,EAAAA,MAAM,EAAEJ,SAAS,CAACa,MADC;AAEnBR,EAAAA,QAAQ,EAAEL,SAAS,CAACc,IAFD;AAGnBR,EAAAA,IAAI,EAAEN,SAAS,CAACe,KAAV,CAAgB;AACpBN,IAAAA,WAAW,EAAET,SAAS,CAACa,MADH;AAEpBH,IAAAA,SAAS,EAAEV,SAAS,CAACa,MAFD;AAGpBF,IAAAA,WAAW,EAAEX,SAAS,CAACgB;AAHH,GAAhB,CAHa;AAQnBT,EAAAA,QAAQ,EAAEP,SAAS,CAACgB;AARD,CAArB;AAWA,eAAef,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./CartItem.css\";\n\nclass CartItem extends Component {\n  state = {};\n\n  render() {\n    const { itemId, onChange, item, quantity } = this.props;\n    const { description, image_url, sales_price } = item;\n    if (!quantity || quantity === 0) {\n      return null;\n    }\n    return (\n      <div className=\"cartItemDiv\">\n        <img src={image_url} alt=\"cart\"/>\n        <span>{description}</span>\n        <button onClick={() => onChange(itemId, -1)}>-</button>\n        <span>{quantity}</span>\n        <button onClick={() => onChange(itemId, 1)}>+</button>\n        <span>${sales_price} ea.</span>\n      </div>\n    );\n  }\n}\n\nCartItem.propTypes = {\n  itemId: PropTypes.string,\n  onChange: PropTypes.func,\n  item: PropTypes.shape({\n    description: PropTypes.string,\n    image_url: PropTypes.string,\n    sales_price: PropTypes.number,\n  }),\n  quantity: PropTypes.number,\n};\n\nexport default CartItem;\n"]},"metadata":{},"sourceType":"module"}