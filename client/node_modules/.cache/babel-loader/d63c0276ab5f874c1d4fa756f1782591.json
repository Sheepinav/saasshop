{"ast":null,"code":"var _jsxFileName = \"/Users/Abhinav/Documents/GitHub/saasshop/src/components/Admin/AddMerch.jsx\";\nimport React, { Component } from \"react\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport \"./Admin.css\";\nimport { Button, FormLabel, FormControl, FormControlLabel, Radio, RadioGroup, TextField } from \"@material-ui/core\";\n\nclass AddMerch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validateForm = () => {\n      const s = this.state;\n      let complete = true;\n\n      for (const key in s.validateForm) {\n        if (s[key]) {\n          s.validateForm[key] = true;\n        } else {\n          s.validateForm[key] = false;\n          complete = false;\n        }\n      }\n\n      this.setState({\n        validateForm: s.validateForm\n      });\n      return complete;\n    };\n\n    this.onSubmit = () => {\n      const valid = this.validateForm();\n\n      if (!valid) {\n        return;\n      }\n\n      this.props.firebasePush(this.state);\n      window.location.reload(true);\n    };\n\n    this.onChange = (type, event) => {\n      let update;\n\n      if (type === \"image\") {\n        update = event.target.files[0];\n      } else {\n        update = event.target.value;\n      }\n\n      this.setState({\n        [type]: update\n      });\n    };\n\n    this.state = {\n      image: null,\n      description: \"\",\n      category: \"\",\n      quantity: 0,\n      price: 0,\n      validateForm: {\n        image: true,\n        description: true,\n        category: true,\n        quantity: true,\n        price: true\n      }\n    };\n  }\n\n  // add stuff for shirt sizes\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"addMerchContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      id: \"payment-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      error: !this.state.validateForm.image,\n      component: \"legend\",\n      className: \"filter-label\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Upload Item Image\"), React.createElement(\"input\", {\n      type: \"file\",\n      className: \"uploadButton\",\n      onChange: event => this.onChange(\"image\", event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      error: !this.state.validateForm.description,\n      onChange: event => this.onChange(\"description\", event),\n      label: \"Description\",\n      id: \"description\",\n      type: \"text\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"payment-method\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      component: \"fieldset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      error: !this.state.validateForm.category,\n      component: \"legend\",\n      className: \"filter-label\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Category\"), React.createElement(RadioGroup, {\n      \"aria-label\": \"payment\",\n      name: \"payment\",\n      value: this.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      onChange: event => this.onChange(\"category\", event),\n      value: \"shirt\",\n      control: React.createElement(Radio, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }),\n      label: \"Shirt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      onChange: event => this.onChange(\"category\", event),\n      value: \"sticker\",\n      control: React.createElement(Radio, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }),\n      label: \"Sticker\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })))), React.createElement(TextField, {\n      error: !this.state.validateForm.quantity,\n      onChange: event => this.onChange(\"quantity\", event),\n      label: \"Quantity\",\n      id: \"standard-basic\",\n      type: \"number\",\n      InputProps: {\n        startAdornment: React.createElement(InputAdornment, {\n          position: \"start\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, \"#\")\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      error: !this.state.validateForm.price,\n      onChange: event => this.onChange(\"price\", event),\n      label: \"Price\",\n      id: \"standard-basic\",\n      type: \"number\",\n      InputProps: {\n        startAdornment: React.createElement(InputAdornment, {\n          position: \"start\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, \"$\")\n      },\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.onSubmit,\n      variant: \"outlined\",\n      color: \"primary\",\n      className: \"submitButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default AddMerch;","map":{"version":3,"sources":["/Users/Abhinav/Documents/GitHub/saasshop/src/components/Admin/AddMerch.jsx"],"names":["React","Component","InputAdornment","Button","FormLabel","FormControl","FormControlLabel","Radio","RadioGroup","TextField","AddMerch","constructor","props","validateForm","s","state","complete","key","setState","onSubmit","valid","firebasePush","window","location","reload","onChange","type","event","update","target","files","value","image","description","category","quantity","price","render","startAdornment"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport \"./Admin.css\";\nimport {\n  Button,\n  FormLabel,\n  FormControl,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  TextField,\n} from \"@material-ui/core\";\n\nclass AddMerch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      image: null,\n      description: \"\",\n      category: \"\",\n      quantity: 0,\n      price: 0,\n      validateForm: {\n        image: true,\n        description: true,\n        category: true,\n        quantity: true,\n        price: true,\n      },\n    };\n  }\n\n  validateForm = () => {\n    const s = this.state;\n    let complete = true;\n    for (const key in s.validateForm) {\n      if (s[key]) {\n        s.validateForm[key] = true;\n      } else {\n        s.validateForm[key] = false;\n        complete = false;\n      }\n    }\n    this.setState({ validateForm: s.validateForm });\n    return complete;\n  };\n\n  onSubmit = () => {\n    const valid = this.validateForm();\n    if (!valid) {\n      return;\n    }\n    this.props.firebasePush(this.state);\n    window.location.reload(true);\n  };\n\n  onChange = (type, event) => {\n    let update;\n    if (type === \"image\") {\n      update = event.target.files[0];\n    } else {\n      update = event.target.value;\n    }\n    this.setState({ [type]: update });\n  };\n\n  // add stuff for shirt sizes\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"addMerchContainer\">\n          <form id=\"payment-form\">\n            <FormLabel\n              error={!this.state.validateForm.image}\n              component=\"legend\"\n              className=\"filter-label\"\n              required\n            >\n              Upload Item Image\n            </FormLabel>\n            <input\n              type=\"file\"\n              className=\"uploadButton\"\n              onChange={(event) => this.onChange(\"image\", event)}\n            ></input>\n            <br />\n            <TextField\n              error={!this.state.validateForm.description}\n              onChange={(event) => this.onChange(\"description\", event)}\n              label=\"Description\"\n              id=\"description\"\n              type=\"text\"\n              required\n            />\n            <br />\n            <div class=\"payment-method\">\n              <FormControl component=\"fieldset\">\n                <FormLabel\n                  error={!this.state.validateForm.category}\n                  component=\"legend\"\n                  className=\"filter-label\"\n                  required\n                >\n                  Category\n                </FormLabel>\n                <RadioGroup\n                  aria-label=\"payment\"\n                  name=\"payment\"\n                  value={this.value}\n                >\n                  <FormControlLabel\n                    onChange={(event) => this.onChange(\"category\", event)}\n                    value=\"shirt\"\n                    control={<Radio />}\n                    label=\"Shirt\"\n                  />\n                  <FormControlLabel\n                    onChange={(event) => this.onChange(\"category\", event)}\n                    value=\"sticker\"\n                    control={<Radio />}\n                    label=\"Sticker\"\n                  />\n                </RadioGroup>\n              </FormControl>\n            </div>\n            <TextField\n              error={!this.state.validateForm.quantity}\n              onChange={(event) => this.onChange(\"quantity\", event)}\n              label=\"Quantity\"\n              id=\"standard-basic\"\n              type=\"number\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">#</InputAdornment>\n                ),\n              }}\n              required\n            />\n            <br />\n            <br />\n            <TextField\n              error={!this.state.validateForm.price}\n              onChange={(event) => this.onChange(\"price\", event)}\n              label=\"Price\"\n              id=\"standard-basic\"\n              type=\"number\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">$</InputAdornment>\n                ),\n              }}\n              required\n            />\n            <Button\n              onClick={this.onSubmit}\n              variant=\"outlined\"\n              color=\"primary\"\n              className=\"submitButton\"\n            >\n              Submit\n            </Button>\n          </form>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AddMerch;\n"]},"metadata":{},"sourceType":"module"}