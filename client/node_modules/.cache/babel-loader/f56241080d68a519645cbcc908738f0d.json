{"ast":null,"code":"import _classCallCheck from\"/Users/Abhinav/Documents/GitHub/saasshop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Abhinav/Documents/GitHub/saasshop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/Abhinav/Documents/GitHub/saasshop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/Abhinav/Documents/GitHub/saasshop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/Abhinav/Documents/GitHub/saasshop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import CartItem from\"./CartItem/CartItem.jsx\";import CartItemSummary from\"./CartItemSummary/CartItemSummary.jsx\";import\"./Cart.css\";import firebase from\"../../firebase/firebase\";import Gift from\"../../assets/images/gift.png\";import{Button,FormLabel,FormControl,FormControlLabel,Radio,RadioGroup,TextField}from\"@material-ui/core\";var Cart=/*#__PURE__*/function(_Component){_inherits(Cart,_Component);function Cart(){var _getPrototypeOf2;var _this;_classCallCheck(this,Cart);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Cart)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={method:\"venmo\"};_this.renderItems=function(items,currentCart,onChange,calculateNumItems){if(calculateNumItems(currentCart,items)===0){return React.createElement(\"p\",null,\"Your cart is empty!\");}else{return Object.keys(items).map(function(key){return React.createElement(CartItem,{key:key,itemId:key,quantity:currentCart[key],item:items[key],onChange:onChange});});}};_this.renderItemsSummary=function(items,currentCart,onChange,calculateNumItems){if(calculateNumItems(currentCart,items)===0){return React.createElement(\"p\",null,\"Your cart is empty!\");}else{return Object.keys(items).map(function(key){return React.createElement(CartItemSummary,{key:key,itemId:key,quantity:currentCart[key],item:items[key],onChange:onChange});});}};_this.onChangePayment=function(event,value){_this.setState({method:value});};_this.submitForm=function(event){event.preventDefault();// Do not save if cart is empty\nvar _this$props=_this.props,items=_this$props.items,currentCart=_this$props.currentCart;if(_this.props.calculateNumItems(currentCart,items)===0){document.querySelector(\"#emptyCart\").style.display=\"block\";setTimeout(function(){document.querySelector(\"#emptyCart\").style.display=\"none\";},3000);return;}// Get form values commented out for now\nvar name=_this.getInputVal(\"name\");var email=_this.getInputVal(\"email\");var payment=_this.state.method;//let venmo = document.getElementById(\"venmo\").checked;\n//let payment = venmo ? \"venmo\" : \"card\";\n// Save order (commented out for now)\n_this.saveOrder(name,email,payment,items,currentCart);//Show summary\n_this.showAlert();};_this.getInputVal=function(id){return document.getElementById(id).value;};_this.componentDidMount=function(){document.getElementById(\"payment-form\").addEventListener(\"submit\",_this.submitForm);// Reference orders collection\nvar ordersRef=firebase.firestore().collection(\"orders\");_this.setState({ordersRef:ordersRef});};_this.saveOrder=function(name,email,payment,items,currentCart){_this.state.ordersRef.add({name:name,email:email,date:new Date(),payment_method:payment,items:currentCart,user_id:\"zgHUgMKQnlhnjfZtSH4pM7bTapO2\",total:_this.props.calculateTotalPrice(currentCart,items)});//TODO: update on_order in inventory?\n};_this.showAlert=function(){document.querySelector(\".alert\").style.display=\"block\";document.querySelector(\".container\").style.display=\"none\";};return _this;}_createClass(Cart,[{key:\"render\",value:function render(){var _this$props2=this.props,items=_this$props2.items,currentCart=_this$props2.currentCart,onChange=_this$props2.onChange,calculateTotalPrice=_this$props2.calculateTotalPrice,calculateNumItems=_this$props2.calculateNumItems;return React.createElement(React.Fragment,null,React.createElement(\"div\",{className:\"container order-container\"},React.createElement(\"div\",{className:\"row\"},React.createElement(\"div\",{className:\"col-lg-6\"},React.createElement(\"div\",{className:\"cart\"},React.createElement(\"h2\",{class:\"center shopping-cart-label\"},\"Your Shopping Cart\"),this.renderItems(items,currentCart,onChange,calculateNumItems))),React.createElement(\"div\",{className:\"col-lg-5 offset-1\"},React.createElement(\"form\",{id:\"payment-form\"},React.createElement(\"h2\",{class:\"center\"},\"Confirm Order\"),React.createElement(TextField,{label:\"Name\",id:\"name\",type:\"text\",required:true}),React.createElement(\"br\",null),React.createElement(TextField,{label:\"Email\",id:\"email\",type:\"email\",required:true}),React.createElement(\"br\",null),React.createElement(\"div\",{class:\"payment-method\"},React.createElement(FormControl,{component:\"fieldset\"},React.createElement(FormLabel,{component:\"legend\",className:\"filter-label\",required:true},\"Payment Method\"),React.createElement(RadioGroup,{\"aria-label\":\"payment\",name:\"payment\",value:this.value,onChange:this.onChangePayment},React.createElement(FormControlLabel,{value:\"venmo\",control:React.createElement(Radio,null),label:\"Venmo\"}),React.createElement(FormControlLabel,{value:\"card\",control:React.createElement(Radio,null),label:\"Card\"})))),React.createElement(\"p\",null,\"If you selected Venmo, please Venmo $\",calculateTotalPrice(currentCart,items),\" to @calsaas.\"),React.createElement(\"p\",{className:\"subtotal\"},React.createElement(\"strong\",null,\"SUBTOTAL\"),\" $\",calculateTotalPrice(currentCart,items)),React.createElement(Button,{variant:\"outlined\",color:\"primary\",className:\"submitButton\",type:\"submit\"},\"Submit\"),React.createElement(\"p\",{id:\"emptyCart\"},\"Your cart is empty! Please add some items to your cart before submitting.\"))))),React.createElement(\"div\",{className:\"alert container\"},React.createElement(\"div\",{className:\"row\"},React.createElement(\"div\",{className:\"col-lg-6\"},React.createElement(\"h2\",null,\"Your Order Summary\"),React.createElement(\"p\",{style:{textAlign:\"right\"}},React.createElement(\"strong\",null,\"SUBTOTAL\"),\" $\",calculateTotalPrice(currentCart,items)),this.renderItemsSummary(items,currentCart,onChange,calculateNumItems)),React.createElement(\"div\",{className:\"col-lg-5 offset-1\"},React.createElement(\"h2\",{style:{color:\"#ADDEFF\"}},\"Thank you!\"),React.createElement(\"p\",null,\"Your order has been received! We will send you a confirmation email, and you will receive another email when your order is ready for pickup. Thank you for shopping with us!\"),React.createElement(\"img\",{src:Gift,alt:\"gift\"})))));}}]);return Cart;}(Component);export default Cart;","map":{"version":3,"sources":["/Users/Abhinav/Documents/GitHub/saasshop/client/src/components/Cart/Cart.jsx"],"names":["React","Component","CartItem","CartItemSummary","firebase","Gift","Button","FormLabel","FormControl","FormControlLabel","Radio","RadioGroup","TextField","Cart","state","method","renderItems","items","currentCart","onChange","calculateNumItems","Object","keys","map","key","renderItemsSummary","onChangePayment","event","value","setState","submitForm","preventDefault","props","document","querySelector","style","display","setTimeout","name","getInputVal","email","payment","saveOrder","showAlert","id","getElementById","componentDidMount","addEventListener","ordersRef","firestore","collection","add","date","Date","payment_method","user_id","total","calculateTotalPrice","textAlign","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport CartItem from \"./CartItem/CartItem.jsx\";\nimport CartItemSummary from \"./CartItemSummary/CartItemSummary.jsx\";\nimport \"./Cart.css\";\nimport firebase from \"../../firebase/firebase\";\nimport Gift from \"../../assets/images/gift.png\";\nimport {\n  Button,\n  FormLabel,\n  FormControl,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  TextField,\n} from \"@material-ui/core\";\n\nclass Cart extends Component {\n  state = {\n    method: \"venmo\",\n  };\n\n  // Function to display items in cart before submit\n  renderItems = (items, currentCart, onChange, calculateNumItems) => {\n    if (calculateNumItems(currentCart, items) === 0) {\n      return <p>Your cart is empty!</p>;\n    } else {\n      return Object.keys(items).map((key) => (\n        <CartItem\n          key={key}\n          itemId={key}\n          quantity={currentCart[key]}\n          item={items[key]}\n          onChange={onChange}\n        />\n      ));\n    }\n  };\n\n  // Function to display items in cart after submit\n  renderItemsSummary = (items, currentCart, onChange, calculateNumItems) => {\n    if (calculateNumItems(currentCart, items) === 0) {\n      return <p>Your cart is empty!</p>;\n    } else {\n      return Object.keys(items).map((key) => (\n        <CartItemSummary\n          key={key}\n          itemId={key}\n          quantity={currentCart[key]}\n          item={items[key]}\n          onChange={onChange}\n        />\n      ));\n    }\n  };\n\n  onChangePayment = (event, value) => {\n    this.setState({ method: value });\n  };\n\n  // Listen for form submit\n  submitForm = (event) => {\n    event.preventDefault();\n\n    // Do not save if cart is empty\n    const { items, currentCart } = this.props;\n    if (this.props.calculateNumItems(currentCart, items) === 0) {\n      document.querySelector(\"#emptyCart\").style.display = \"block\";\n      setTimeout(() => {\n        document.querySelector(\"#emptyCart\").style.display = \"none\";\n      }, 3000);\n      return;\n    }\n\n    // Get form values commented out for now\n    let name = this.getInputVal(\"name\");\n    let email = this.getInputVal(\"email\");\n    let payment = this.state.method;\n    //let venmo = document.getElementById(\"venmo\").checked;\n    //let payment = venmo ? \"venmo\" : \"card\";\n\n    // Save order (commented out for now)\n    this.saveOrder(name, email, payment, items, currentCart);\n\n    //Show summary\n    this.showAlert();\n  };\n\n  // Function to get form values\n  getInputVal = (id) => {\n    return document.getElementById(id).value;\n  };\n\n  componentDidMount = () => {\n    document\n      .getElementById(\"payment-form\")\n      .addEventListener(\"submit\", this.submitForm);\n    // Reference orders collection\n    const ordersRef = firebase.firestore().collection(\"orders\");\n    this.setState({ ordersRef });\n  };\n\n  // Save order to firebase\n  saveOrder = (name, email, payment, items, currentCart) => {\n    this.state.ordersRef.add({\n      name: name,\n      email: email,\n      date: new Date(),\n      payment_method: payment,\n      items: currentCart,\n      user_id: \"zgHUgMKQnlhnjfZtSH4pM7bTapO2\",\n      total: this.props.calculateTotalPrice(currentCart, items),\n    });\n    //TODO: update on_order in inventory?\n  };\n\n  // Show thank you + order summary page after submit\n  showAlert = () => {\n    document.querySelector(\".alert\").style.display = \"block\";\n    document.querySelector(\".container\").style.display = \"none\";\n  };\n\n  render() {\n    const {\n      items,\n      currentCart,\n      onChange,\n      calculateTotalPrice,\n      calculateNumItems,\n    } = this.props;\n    return (\n      <React.Fragment>\n        <div className=\"container order-container\">\n          <div className=\"row\">\n            <div className=\"col-lg-6\">\n              <div className=\"cart\">\n                <h2 class=\"center shopping-cart-label\">Your Shopping Cart</h2>\n                {this.renderItems(\n                  items,\n                  currentCart,\n                  onChange,\n                  calculateNumItems\n                )}\n              </div>\n            </div>\n            <div className=\"col-lg-5 offset-1\">\n              <form id=\"payment-form\">\n                <h2 class=\"center\">Confirm Order</h2>\n                <TextField label=\"Name\" id=\"name\" type=\"text\" required />\n                <br />\n                <TextField label=\"Email\" id=\"email\" type=\"email\" required />\n                <br />\n                <div class=\"payment-method\">\n                  <FormControl component=\"fieldset\">\n                    <FormLabel\n                      component=\"legend\"\n                      className=\"filter-label\"\n                      required\n                    >\n                      Payment Method\n                    </FormLabel>\n                    <RadioGroup\n                      aria-label=\"payment\"\n                      name=\"payment\"\n                      value={this.value}\n                      onChange={this.onChangePayment}\n                    >\n                      <FormControlLabel\n                        value=\"venmo\"\n                        control={<Radio />}\n                        label=\"Venmo\"\n                      />\n                      <FormControlLabel\n                        value=\"card\"\n                        control={<Radio />}\n                        label=\"Card\"\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                </div>\n\n                <p>\n                  If you selected Venmo, please Venmo $\n                  {calculateTotalPrice(currentCart, items)} to @calsaas.\n                </p>\n                <p className=\"subtotal\">\n                  <strong>SUBTOTAL</strong> $\n                  {calculateTotalPrice(currentCart, items)}\n                </p>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  className=\"submitButton\"\n                  type=\"submit\"\n                >\n                  Submit\n                </Button>\n                {/* <button className=\"submitButton\" type=\"submit\">\n                  Submit\n                </button> */}\n                <p id=\"emptyCart\">\n                  Your cart is empty! Please add some items to your cart before\n                  submitting.\n                </p>\n              </form>\n            </div>\n          </div>\n        </div>\n        <div className=\"alert container\">\n          <div className=\"row\">\n            <div className=\"col-lg-6\">\n              <h2>Your Order Summary</h2>\n              <p style={{ textAlign: \"right\" }}>\n                <strong>SUBTOTAL</strong> $\n                {calculateTotalPrice(currentCart, items)}\n              </p>\n              {this.renderItemsSummary(\n                items,\n                currentCart,\n                onChange,\n                calculateNumItems\n              )}\n            </div>\n            <div className=\"col-lg-5 offset-1\">\n              <h2 style={{ color: \"#ADDEFF\" }}>Thank you!</h2>\n              <p>\n                Your order has been received! We will send you a confirmation\n                email, and you will receive another email when your order is\n                ready for pickup. Thank you for shopping with us!\n              </p>\n              <img src={Gift} alt=\"gift\" />\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nCart.propTypes = {\n  items: PropTypes.object,\n  currentCart: PropTypes.object,\n  onChange: PropTypes.func,\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}