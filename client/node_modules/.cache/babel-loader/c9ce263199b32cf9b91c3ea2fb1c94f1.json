{"ast":null,"code":"var _jsxFileName = \"/Users/Abhinav/Documents/GitHub/saasshop/src/containers/ShopHome.jsx\";\nimport React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport NavBar from \"../components/NavBar/NavBar\";\nimport Shop from \"../components/Shop/Shop\";\nimport Cart from \"../components/Cart/Cart\";\nimport AdminUI from \"../components/Admin/AdminUI\";\nimport UserUI from \"../components/User/UserUI\";\nimport \"./ShopHome.css\";\nimport firebase from \"../firebase/firebase\";\n\nclass ShopHome extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {},\n      currentCart: {},\n      orders: {}\n    };\n\n    this.pullShopItems = () => {\n      firebase.firestore().collection(\"inventory\").get().then(snapshot => {\n        snapshot.forEach(item => {\n          const data = this.state.data;\n          data[item.id] = item.data();\n          this.setState({\n            data\n          });\n        });\n      });\n    };\n\n    this.pullPastOrders = () => {\n      firebase.firestore().collection(\"orders\").get().then(snapshot => {\n        snapshot.forEach(order => {\n          const orders = this.state.orders;\n          orders[order.id] = order.data();\n          this.setState({\n            orders\n          });\n        });\n      });\n    };\n\n    this.onChange = (itemId, direction) => {\n      const cart = this.state.currentCart;\n      const currentCart = cart[itemId] ? cart[itemId] : 0;\n      const stock = this.state.data[itemId].stock;\n      let updatedCount = currentCart + direction < 0 ? 0 : currentCart + direction;\n\n      if (updatedCount > stock) {\n        updatedCount = stock;\n        alert(\"Cannot add item to cart. Max stock of item reached.\");\n      }\n\n      cart[itemId] = updatedCount;\n      this.setState({\n        cart\n      });\n    };\n\n    this.calculateNumItems = (currentCart, items) => {\n      let total = 0;\n      Object.keys(items).forEach(key => {\n        total += currentCart[key] ? currentCart[key] : 0;\n      });\n      return total;\n    };\n\n    this.calculateTotalPrice = (currentCart, items) => {\n      let total = 0;\n      Object.keys(items).forEach(key => {\n        total += items[key].sales_price * (currentCart[key] ? currentCart[key] : 0);\n      });\n      return total.toFixed(2);\n    };\n\n    this.updateStock = (itemId, direction) => {\n      const data = this.state.data;\n      const currentStock = this.state.data[itemId].stock;\n      let updatedCount = currentStock + direction < 0 ? 0 : currentStock + direction;\n      data[itemId].stock = updatedCount; //need to actually update firebase\n\n      console.log(data[itemId].stock);\n      this.setState({\n        data\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.pullShopItems();\n    this.pullPastOrders();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      items: this.state.data,\n      onChange: this.onChange,\n      currentCart: this.state.currentCart,\n      calculateTotalPrice: this.calculateTotalPrice,\n      calculateNumItems: this.calculateNumItems,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"gradient-divide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(Shop, {\n        items: this.state.data,\n        onChange: this.onChange,\n        currentCart: this.state.currentCart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/cart\",\n      render: props => React.createElement(Cart, Object.assign({}, props, {\n        items: this.state.data,\n        currentCart: this.state.currentCart,\n        onChange: this.onChange,\n        calculateTotalPrice: this.calculateTotalPrice,\n        calculateNumItems: this.calculateNumItems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/user\",\n      render: props => React.createElement(UserUI, Object.assign({}, props, {\n        items: this.state.data,\n        orders: this.state.orders,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/admin\",\n      render: props => React.createElement(AdminUI, Object.assign({}, props, {\n        items: this.state.data,\n        updateStock: this.updateStock,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ShopHome;","map":{"version":3,"sources":["/Users/Abhinav/Documents/GitHub/saasshop/src/containers/ShopHome.jsx"],"names":["React","Component","Route","NavBar","Shop","Cart","AdminUI","UserUI","firebase","ShopHome","state","data","currentCart","orders","pullShopItems","firestore","collection","get","then","snapshot","forEach","item","id","setState","pullPastOrders","order","onChange","itemId","direction","cart","stock","updatedCount","alert","calculateNumItems","items","total","Object","keys","key","calculateTotalPrice","sales_price","toFixed","updateStock","currentStock","console","log","componentDidMount","render","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport NavBar from \"../components/NavBar/NavBar\";\nimport Shop from \"../components/Shop/Shop\";\nimport Cart from \"../components/Cart/Cart\";\nimport AdminUI from \"../components/Admin/AdminUI\";\nimport UserUI from \"../components/User/UserUI\";\nimport \"./ShopHome.css\";\nimport firebase from \"../firebase/firebase\";\n\nclass ShopHome extends Component {\n  state = {\n    data: {},\n    currentCart: {},\n    orders: {},\n  };\n\n  componentDidMount() {\n    this.pullShopItems();\n    this.pullPastOrders();\n  }\n\n  pullShopItems = () => {\n    firebase\n      .firestore()\n      .collection(\"inventory\")\n      .get()\n      .then((snapshot) => {\n        snapshot.forEach((item) => {\n          const data = this.state.data;\n          data[item.id] = item.data();\n          this.setState({ data });\n        });\n      });\n  };\n\n  // Function to get past orders\n  pullPastOrders = () => {\n    firebase\n      .firestore()\n      .collection(\"orders\")\n      .get()\n      .then((snapshot) => {\n        snapshot.forEach((order) => {\n          const orders = this.state.orders;\n          orders[order.id] = order.data();\n          this.setState({ orders });\n        });\n      });\n  };\n\n  // Function to update the quantity of an item in cart\n  onChange = (itemId, direction) => {\n    const cart = this.state.currentCart;\n    const currentCart = cart[itemId] ? cart[itemId] : 0;\n    const stock = this.state.data[itemId].stock;\n    let updatedCount =\n      currentCart + direction < 0 ? 0 : currentCart + direction;\n    if (updatedCount > stock) {\n      updatedCount = stock;\n      alert(\"Cannot add item to cart. Max stock of item reached.\");\n    }\n    cart[itemId] = updatedCount;\n    this.setState({ cart });\n  };\n\n  // Function to calculate the total number of items in cart\n  calculateNumItems = (currentCart, items) => {\n    let total = 0;\n\n    Object.keys(items).forEach((key) => {\n      total += currentCart[key] ? currentCart[key] : 0;\n    });\n\n    return total;\n  };\n\n  // Function to calculate total price of items in cart\n  calculateTotalPrice = (currentCart, items) => {\n    let total = 0;\n\n    Object.keys(items).forEach((key) => {\n      total +=\n        items[key].sales_price * (currentCart[key] ? currentCart[key] : 0);\n    });\n\n    return total.toFixed(2);\n  };\n\n  // Function to update the quantity of an item in stock (admin only)\n  // THIS DOESN'T FULLY WORK LOL\n  updateStock = (itemId, direction) => {\n    const data = this.state.data;\n    const currentStock = this.state.data[itemId].stock;\n    let updatedCount =\n      currentStock + direction < 0 ? 0 : currentStock + direction;\n    data[itemId].stock = updatedCount;\n    //need to actually update firebase\n    console.log(data[itemId].stock);\n    this.setState({ data });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar\n          items={this.state.data}\n          onChange={this.onChange}\n          currentCart={this.state.currentCart}\n          calculateTotalPrice={this.calculateTotalPrice}\n          calculateNumItems={this.calculateNumItems}\n        />\n        <div class=\"gradient-divide\"></div>\n        <Route\n          exact\n          path=\"/\"\n          render={(props) => (\n            <Shop\n              items={this.state.data}\n              onChange={this.onChange}\n              currentCart={this.state.currentCart}\n            />\n          )}\n        />\n        <Route\n          path=\"/cart\"\n          render={(props) => (\n            <Cart\n              {...props}\n              items={this.state.data}\n              currentCart={this.state.currentCart}\n              onChange={this.onChange}\n              calculateTotalPrice={this.calculateTotalPrice}\n              calculateNumItems={this.calculateNumItems}\n            />\n          )}\n        />\n\n        <Route\n          path=\"/user\"\n          render={(props) => (\n            <UserUI\n              {...props}\n              items={this.state.data}\n              orders={this.state.orders}\n            />\n          )}\n        />\n        <Route\n          path=\"/admin\"\n          render={(props) => (\n            <AdminUI\n              {...props}\n              items={this.state.data}\n              updateStock={this.updateStock}\n            />\n          )}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ShopHome;\n"]},"metadata":{},"sourceType":"module"}