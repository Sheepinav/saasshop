{"ast":null,"code":"var _jsxFileName = \"/Users/Abhinav/Documents/GitHub/saasshop/src/components/Cart/Cart.jsx\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport CartItem from \"./CartItem/CartItem.jsx\";\nimport CartItemSummary from \"./CartItemSummary/CartItemSummary.jsx\";\nimport \"./Cart.css\";\nimport firebase from \"../../firebase/firebase\";\nimport Gift from \"../../assets/images/gift.png\";\nimport { Button, FormLabel, FormControl, FormControlLabel, Radio, RadioGroup, TextField } from \"@material-ui/core\";\n\nclass Cart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      method: \"venmo\"\n    };\n\n    this.renderItems = (items, currentCart, onChange, calculateNumItems) => {\n      if (calculateNumItems(currentCart, items) === 0) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, \"Your cart is empty!\");\n      } else {\n        return Object.keys(items).map(key => React.createElement(CartItem, {\n          key: key,\n          itemId: key,\n          quantity: currentCart[key],\n          item: items[key],\n          onChange: onChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }));\n      }\n    };\n\n    this.renderItemsSummary = (items, currentCart, onChange, calculateNumItems) => {\n      if (calculateNumItems(currentCart, items) === 0) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, \"Your cart is empty!\");\n      } else {\n        return Object.keys(items).map(key => React.createElement(CartItemSummary, {\n          key: key,\n          itemId: key,\n          quantity: currentCart[key],\n          item: items[key],\n          onChange: onChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }));\n      }\n    };\n\n    this.onChangePayment = (event, value) => {\n      this.setState({\n        method: value\n      });\n    };\n\n    this.submitForm = event => {\n      event.preventDefault(); // Do not save if cart is empty\n\n      const {\n        items,\n        currentCart\n      } = this.props;\n\n      if (this.props.calculateNumItems(currentCart, items) === 0) {\n        document.querySelector(\"#emptyCart\").style.display = \"block\";\n        setTimeout(() => {\n          document.querySelector(\"#emptyCart\").style.display = \"none\";\n        }, 3000);\n        return;\n      } // Get form values\n\n\n      let name = this.getInputVal(\"name\");\n      let email = this.getInputVal(\"email\");\n      let venmo = document.getElementById(\"venmo\").checked;\n      let payment = venmo ? \"venmo\" : \"card\"; // Save order and show summary\n\n      this.saveOrder(name, email, payment, items, currentCart);\n      this.showAlert();\n    };\n\n    this.getInputVal = id => {\n      return document.getElementById(id).value;\n    };\n\n    this.componentDidMount = () => {\n      document.getElementById(\"payment-form\").addEventListener(\"submit\", this.submitForm); // Reference orders collection\n\n      const ordersRef = firebase.firestore().collection(\"orders\");\n      this.setState({\n        ordersRef\n      });\n    };\n\n    this.saveOrder = (name, email, payment, items, currentCart) => {\n      this.state.ordersRef.add({\n        name: name,\n        email: email,\n        date: new Date(),\n        payment_method: payment,\n        items: currentCart,\n        total: this.calculateTotalPrice(currentCart, items)\n      }); //TODO: update on_order in inventory?\n    };\n\n    this.showAlert = () => {\n      document.querySelector(\".alert\").style.display = \"block\";\n      document.querySelector(\".container\").style.display = \"none\";\n    };\n  }\n\n  render() {\n    const {\n      items,\n      currentCart,\n      onChange,\n      calculateTotalPrice,\n      calculateNumItems\n    } = this.props;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container order-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      class: \"center shopping-cart-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Your Shopping Cart\"), this.renderItems(items, currentCart, onChange, calculateNumItems))), React.createElement(\"div\", {\n      className: \"col-lg-5 offset-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      id: \"payment-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      class: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Confirm Order\"), React.createElement(TextField, {\n      label: \"Name\",\n      id: \"name\",\n      type: \"text\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      label: \"Email\",\n      id: \"email\",\n      type: \"email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"payment-method\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      component: \"fieldset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      component: \"legend\",\n      className: \"filter-label\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Payment Method\"), React.createElement(RadioGroup, {\n      \"aria-label\": \"payment\",\n      name: \"payment\",\n      value: this.value,\n      onChange: this.onChangePayment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      value: \"venmo\",\n      control: React.createElement(Radio, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }),\n      label: \"Venmo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      value: \"card\",\n      control: React.createElement(Radio, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }),\n      label: \"Card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"If you selected Venmo, please Venmo $\", calculateTotalPrice(currentCart, items), \" to @calsaas.\"), React.createElement(\"p\", {\n      className: \"subtotal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"SUBTOTAL\"), \" $\", calculateTotalPrice(currentCart, items)), React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      className: \"submitButton\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"p\", {\n      id: \"emptyCart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Your cart is empty! Please add some items to your cart before submitting.\"))))), React.createElement(\"div\", {\n      className: \"alert container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Your Order Summary\"), React.createElement(\"p\", {\n      style: {\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"SUBTOTAL\"), \" $\", calculateTotalPrice(currentCart, items)), this.renderItemsSummary(items, currentCart, onChange, calculateNumItems)), React.createElement(\"div\", {\n      className: \"col-lg-5 offset-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      style: {\n        color: \"#ADDEFF\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"Thank you!\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"Your order has been received! We will send you a confirmation email, and you will receive another email when your order is ready for pickup. Thank you for shopping with us!\"), React.createElement(\"img\", {\n      src: Gift,\n      alt: \"gift\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nCart.propTypes = {\n  items: PropTypes.object,\n  currentCart: PropTypes.object,\n  onChange: PropTypes.func\n};\nexport default Cart;","map":{"version":3,"sources":["/Users/Abhinav/Documents/GitHub/saasshop/src/components/Cart/Cart.jsx"],"names":["React","Component","PropTypes","CartItem","CartItemSummary","firebase","Gift","Button","FormLabel","FormControl","FormControlLabel","Radio","RadioGroup","TextField","Cart","state","method","renderItems","items","currentCart","onChange","calculateNumItems","Object","keys","map","key","renderItemsSummary","onChangePayment","event","value","setState","submitForm","preventDefault","props","document","querySelector","style","display","setTimeout","name","getInputVal","email","venmo","getElementById","checked","payment","saveOrder","showAlert","id","componentDidMount","addEventListener","ordersRef","firestore","collection","add","date","Date","payment_method","total","calculateTotalPrice","render","textAlign","color","propTypes","object","func"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport CartItem from \"./CartItem/CartItem.jsx\";\nimport CartItemSummary from \"./CartItemSummary/CartItemSummary.jsx\";\nimport \"./Cart.css\";\nimport firebase from \"../../firebase/firebase\";\nimport Gift from \"../../assets/images/gift.png\";\nimport {\n  Button,\n  FormLabel,\n  FormControl,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  TextField,\n} from \"@material-ui/core\";\n\nclass Cart extends Component {\n  state = {\n    method: \"venmo\",\n  };\n\n  // Function to display items in cart before submit\n  renderItems = (items, currentCart, onChange, calculateNumItems) => {\n    if (calculateNumItems(currentCart, items) === 0) {\n      return <p>Your cart is empty!</p>;\n    } else {\n      return Object.keys(items).map((key) => (\n        <CartItem\n          key={key}\n          itemId={key}\n          quantity={currentCart[key]}\n          item={items[key]}\n          onChange={onChange}\n        />\n      ));\n    }\n  };\n\n  // Function to display items in cart after submit\n  renderItemsSummary = (items, currentCart, onChange, calculateNumItems) => {\n    if (calculateNumItems(currentCart, items) === 0) {\n      return <p>Your cart is empty!</p>;\n    } else {\n      return Object.keys(items).map((key) => (\n        <CartItemSummary\n          key={key}\n          itemId={key}\n          quantity={currentCart[key]}\n          item={items[key]}\n          onChange={onChange}\n        />\n      ));\n    }\n  };\n\n  onChangePayment = (event, value) => {\n    this.setState({ method: value });\n  };\n\n  // Listen for form submit\n  submitForm = (event) => {\n    event.preventDefault();\n\n    // Do not save if cart is empty\n    const { items, currentCart } = this.props;\n    if (this.props.calculateNumItems(currentCart, items) === 0) {\n      document.querySelector(\"#emptyCart\").style.display = \"block\";\n      setTimeout(() => {\n        document.querySelector(\"#emptyCart\").style.display = \"none\";\n      }, 3000);\n      return;\n    }\n\n    // Get form values\n    let name = this.getInputVal(\"name\");\n    let email = this.getInputVal(\"email\");\n    let venmo = document.getElementById(\"venmo\").checked;\n    let payment = venmo ? \"venmo\" : \"card\";\n\n    // Save order and show summary\n    this.saveOrder(name, email, payment, items, currentCart);\n    this.showAlert();\n  };\n\n  // Function to get form values\n  getInputVal = (id) => {\n    return document.getElementById(id).value;\n  };\n\n  componentDidMount = () => {\n    document\n      .getElementById(\"payment-form\")\n      .addEventListener(\"submit\", this.submitForm);\n    // Reference orders collection\n    const ordersRef = firebase.firestore().collection(\"orders\");\n    this.setState({ ordersRef });\n  };\n\n  // Save order to firebase\n  saveOrder = (name, email, payment, items, currentCart) => {\n    this.state.ordersRef.add({\n      name: name,\n      email: email,\n      date: new Date(),\n      payment_method: payment,\n      items: currentCart,\n      total: this.calculateTotalPrice(currentCart, items),\n    });\n    //TODO: update on_order in inventory?\n  };\n\n  // Show thank you + order summary page after submit\n  showAlert = () => {\n    document.querySelector(\".alert\").style.display = \"block\";\n    document.querySelector(\".container\").style.display = \"none\";\n  };\n\n  render() {\n    const {\n      items,\n      currentCart,\n      onChange,\n      calculateTotalPrice,\n      calculateNumItems,\n    } = this.props;\n    return (\n      <React.Fragment>\n        <div className=\"container order-container\">\n          <div className=\"row\">\n            <div className=\"col-lg-6\">\n              <div className=\"cart\">\n                <h2 class=\"center shopping-cart-label\">Your Shopping Cart</h2>\n                {this.renderItems(\n                  items,\n                  currentCart,\n                  onChange,\n                  calculateNumItems\n                )}\n              </div>\n            </div>\n            <div className=\"col-lg-5 offset-1\">\n              <form id=\"payment-form\">\n                <h2 class=\"center\">Confirm Order</h2>\n                <TextField label=\"Name\" id=\"name\" type=\"text\" required />\n                <br />\n                <TextField label=\"Email\" id=\"email\" type=\"email\" required />\n                <br />\n                <div class=\"payment-method\">\n                  <FormControl component=\"fieldset\">\n                    <FormLabel\n                      component=\"legend\"\n                      className=\"filter-label\"\n                      required\n                    >\n                      Payment Method\n                    </FormLabel>\n                    <RadioGroup\n                      aria-label=\"payment\"\n                      name=\"payment\"\n                      value={this.value}\n                      onChange={this.onChangePayment}\n                    >\n                      <FormControlLabel\n                        value=\"venmo\"\n                        control={<Radio />}\n                        label=\"Venmo\"\n                      />\n                      <FormControlLabel\n                        value=\"card\"\n                        control={<Radio />}\n                        label=\"Card\"\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                </div>\n\n                <p>\n                  If you selected Venmo, please Venmo $\n                  {calculateTotalPrice(currentCart, items)} to @calsaas.\n                </p>\n                <p className=\"subtotal\">\n                  <strong>SUBTOTAL</strong> $\n                  {calculateTotalPrice(currentCart, items)}\n                </p>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  className=\"submitButton\"\n                  type=\"submit\"\n                >\n                  Submit\n                </Button>\n                {/* <button className=\"submitButton\" type=\"submit\">\n                  Submit\n                </button> */}\n                <p id=\"emptyCart\">\n                  Your cart is empty! Please add some items to your cart before\n                  submitting.\n                </p>\n              </form>\n            </div>\n          </div>\n        </div>\n        <div className=\"alert container\">\n          <div className=\"row\">\n            <div className=\"col-lg-6\">\n              <h2>Your Order Summary</h2>\n              <p style={{ textAlign: \"right\" }}>\n                <strong>SUBTOTAL</strong> $\n                {calculateTotalPrice(currentCart, items)}\n              </p>\n              {this.renderItemsSummary(\n                items,\n                currentCart,\n                onChange,\n                calculateNumItems\n              )}\n            </div>\n            <div className=\"col-lg-5 offset-1\">\n              <h2 style={{ color: \"#ADDEFF\" }}>Thank you!</h2>\n              <p>\n                Your order has been received! We will send you a confirmation\n                email, and you will receive another email when your order is\n                ready for pickup. Thank you for shopping with us!\n              </p>\n              <img src={Gift} alt=\"gift\" />\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nCart.propTypes = {\n  items: PropTypes.object,\n  currentCart: PropTypes.object,\n  onChange: PropTypes.func,\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}