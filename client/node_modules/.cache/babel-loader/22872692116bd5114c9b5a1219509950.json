{"ast":null,"code":"var _jsxFileName = \"/Users/Abhinav/Documents/GitHub/saasshop/src/containers/ShopHome.jsx\";\nimport React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport NavBar from \"../components/NavBar/NavBar\";\nimport Shop from \"../components/Shop/Shop\";\nimport Cart from \"../components/Cart/Cart\";\nimport AdminUI from \"../components/Admin/AdminUI\";\nimport UserUI from \"../components/User/UserUI\";\nimport AddMerch from \"../components/Admin/AddMerch\";\nimport \"./ShopHome.css\";\nimport SignIn from \"../components/SignIn/SignIn\";\nimport Zoomer from \"../assets/images/shirts/zoomer.png\";\nimport Logo from \"../assets/images/stickers/SAAS_logo.png\";\nimport firebase from \"../firebase/firebase\";\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions/index.js';\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nclass ShopHome extends Component {\n  constructor(props) {\n    super(props);\n\n    this.pullShopItems = () => {\n      firebase.firestore().collection(\"inventory\").get().then(snapshot => {\n        snapshot.forEach(item => {\n          const data = this.state.data;\n          data[item.id] = item.data();\n          this.setState({\n            data\n          });\n        });\n      });\n    };\n\n    this.handleOnPullShopItems = () => {\n      console.log(\"handler function called\");\n      this.props.onPullShopItems();\n    };\n\n    this.pullAdminEmails = () => {\n      firebase.firestore().collection(\"admin\").doc(\"emails\").get().then(snapshot => {\n        const data = snapshot.data();\n        this.setState({\n          adminEmailList: data.email_list\n        });\n      });\n    };\n\n    this.pullPastOrders = () => {\n      firebase.firestore().collection(\"orders\").get().then(snapshot => {\n        snapshot.forEach(order => {\n          const orders = this.state.orders;\n          orders[order.id] = order.data();\n          this.setState({\n            orders\n          });\n        });\n      });\n    };\n\n    this.firebasePush = item => {\n      console.log(item.image);\n      const ref = firebase.storage().ref();\n      const name = item.description;\n      const newRef = ref.child(name + \".png\");\n      newRef.put(item.image).then(() => {\n        newRef.getDownloadURL().then(url => {\n          console.log(url);\n          const newInventory = {\n            category: item.category,\n            description: item.description,\n            image_url: url,\n            on_order: 0,\n            sales_price: item.price,\n            size_stock: {},\n            sizes: [],\n            stock: item.quantity\n          };\n          firebase.firestore().collection(\"inventory\").add(newInventory);\n        });\n      });\n    };\n\n    this.onChange = (itemId, direction) => {\n      const cart = this.state.currentCart;\n      const currentCart = cart[itemId] ? cart[itemId] : 0;\n      const stock = this.state.data[itemId].stock;\n      let updatedCount = currentCart + direction < 0 ? 0 : currentCart + direction;\n\n      if (updatedCount > stock) {\n        updatedCount = stock;\n        alert(\"Cannot add item to cart. Max stock of item reached.\");\n      }\n\n      cart[itemId] = updatedCount;\n      this.setState({\n        cart\n      });\n    };\n\n    this.calculateNumItems = (currentCart, items) => {\n      let total = 0;\n      Object.keys(items).forEach(key => {\n        total += currentCart[key] ? currentCart[key] : 0;\n      });\n      return total;\n    };\n\n    this.calculateTotalPrice = (currentCart, items) => {\n      let total = 0;\n      Object.keys(items).forEach(key => {\n        total += items[key].sales_price * (currentCart[key] ? currentCart[key] : 0);\n      });\n      return total.toFixed(2);\n    };\n\n    this.updateStock = (itemId, direction) => {\n      const data = this.state.data;\n      const currentStock = this.state.data[itemId].stock;\n      let updatedCount = currentStock + direction < 0 ? 0 : currentStock + direction;\n      data[itemId].stock = updatedCount; //need to actually update firebase\n\n      console.log(data[itemId].stock);\n      this.setState({\n        data\n      });\n    };\n\n    this.logOut = () => {\n      console.log(\"log out\");\n      firebase.auth().signOut();\n    };\n\n    this.logIn = () => {\n      console.log(\"log in\");\n      firebase.auth().signInWithRedirect(provider);\n    };\n\n    this.state = {\n      items: [{\n        id: 1,\n        value: 0,\n        name: \"DOGDOGDOG\",\n        price: 20,\n        image: Zoomer\n      }, {\n        id: 2,\n        value: 0,\n        name: \"SAAS Logo\",\n        price: 2,\n        image: Logo\n      }],\n      data: {},\n      currentCart: {},\n      orders: {},\n      adminEmailList: [],\n      auth: null\n    };\n    firebase.auth().onAuthStateChanged(user => {\n      //console.log(user);\n      this.setState({\n        auth: user\n      });\n    });\n    this.logOut = this.logOut.bind(this);\n    this.logIn = this.logIn.bind(this);\n  }\n\n  componentDidMount() {\n    this.pullShopItems();\n    this.pullPastOrders();\n    this.pullAdminEmails();\n    this.handleOnPullShopItems();\n  } //FOR THIS COMPONENT\n\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      items: this.state.data,\n      currentCart: this.state.currentCart,\n      calculateTotalPrice: this.calculateTotalPrice,\n      calculateNumItems: this.calculateNumItems,\n      logIn: this.logIn,\n      logOut: this.logOut,\n      auth: this.state.auth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"gradient-divide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(Shop, {\n        items: this.state.data,\n        currentCart: this.state.currentCart,\n        auth: this.state.auth,\n        adminEmailList: this.state.adminEmailList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => React.createElement(SignIn, {\n        items: this.state.data,\n        currentCart: this.state.currentCart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/cart\",\n      render: props => React.createElement(Cart, Object.assign({}, props, {\n        items: this.state.data,\n        currentCart: this.state.currentCart,\n        onChange: this.onChange,\n        calculateTotalPrice: this.calculateTotalPrice,\n        calculateNumItems: this.calculateNumItems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/user\",\n      render: props => React.createElement(UserUI, Object.assign({}, props, {\n        items: this.state.data,\n        orders: this.state.orders,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/admin\",\n      render: props => React.createElement(AdminUI, Object.assign({}, props, {\n        items: this.state.data,\n        updateStock: this.updateStock,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/addmerch\",\n      render: props => React.createElement(AddMerch, Object.assign({}, props, {\n        firebasePush: this.firebasePush,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {//authRedirectPath: state.auth.authRedirectPath\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onPullShopItems: () => dispatch(actions.pullShopItems())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopHome);","map":{"version":3,"sources":["/Users/Abhinav/Documents/GitHub/saasshop/src/containers/ShopHome.jsx"],"names":["React","Component","Route","Redirect","NavBar","Shop","Cart","AdminUI","UserUI","AddMerch","SignIn","Zoomer","Logo","firebase","connect","actions","provider","auth","GoogleAuthProvider","ShopHome","constructor","props","pullShopItems","firestore","collection","get","then","snapshot","forEach","item","data","state","id","setState","handleOnPullShopItems","console","log","onPullShopItems","pullAdminEmails","doc","adminEmailList","email_list","pullPastOrders","order","orders","firebasePush","image","ref","storage","name","description","newRef","child","put","getDownloadURL","url","newInventory","category","image_url","on_order","sales_price","price","size_stock","sizes","stock","quantity","add","onChange","itemId","direction","cart","currentCart","updatedCount","alert","calculateNumItems","items","total","Object","keys","key","calculateTotalPrice","toFixed","updateStock","currentStock","logOut","signOut","logIn","signInWithRedirect","value","onAuthStateChanged","user","bind","componentDidMount","render","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport NavBar from \"../components/NavBar/NavBar\";\nimport Shop from \"../components/Shop/Shop\";\nimport Cart from \"../components/Cart/Cart\";\nimport AdminUI from \"../components/Admin/AdminUI\";\nimport UserUI from \"../components/User/UserUI\";\nimport AddMerch from \"../components/Admin/AddMerch\";\nimport \"./ShopHome.css\";\nimport SignIn from \"../components/SignIn/SignIn\";\nimport Zoomer from \"../assets/images/shirts/zoomer.png\";\nimport Logo from \"../assets/images/stickers/SAAS_logo.png\";\nimport firebase from \"../firebase/firebase\";\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions/index.js';\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nclass ShopHome extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      items: [\n        {\n          id: 1,\n          value: 0,\n          name: \"DOGDOGDOG\",\n          price: 20,\n          image: Zoomer,\n        },\n        {\n          id: 2,\n          value: 0,\n          name: \"SAAS Logo\",\n          price: 2,\n          image: Logo,\n        },\n      ],\n      data: {},\n      currentCart: {},\n      orders: {},\n      adminEmailList: [],\n      auth: null,\n    };\n    firebase.auth().onAuthStateChanged((user) => {\n      //console.log(user);\n      this.setState({ auth: user });\n    });\n\n    this.logOut = this.logOut.bind(this);\n    this.logIn = this.logIn.bind(this);\n  }\n\n  componentDidMount() {\n    this.pullShopItems();\n    this.pullPastOrders();\n    this.pullAdminEmails();\n    this.handleOnPullShopItems();\n  }\n\n  //FOR THIS COMPONENT\n  pullShopItems = () => {\n    firebase\n      .firestore()\n      .collection(\"inventory\")\n      .get()\n      .then((snapshot) => {\n        snapshot.forEach((item) => {\n          const data = this.state.data;\n          data[item.id] = item.data();\n          this.setState({ data });\n        });\n      });\n  };\n\n  //FOR REDUX\n  handleOnPullShopItems = () => {\n    console.log(\"handler function called\")\n    this.props.onPullShopItems();\n  }\n\n  pullAdminEmails = () => {\n    firebase\n      .firestore()\n      .collection(\"admin\")\n      .doc(\"emails\")\n      .get()\n      .then((snapshot) => {\n        const data = snapshot.data();\n        this.setState({ adminEmailList: data.email_list });\n      });\n  };\n\n  pullPastOrders = () => {\n    firebase\n      .firestore()\n      .collection(\"orders\")\n      .get()\n      .then((snapshot) => {\n        snapshot.forEach((order) => {\n          const orders = this.state.orders;\n          orders[order.id] = order.data();\n          this.setState({ orders });\n        });\n      });\n  };\n\n  firebasePush = (item) => {\n    console.log(item.image);\n    const ref = firebase.storage().ref();\n    const name = item.description;\n    const newRef = ref.child(name + \".png\");\n    newRef.put(item.image).then(() => {\n      newRef.getDownloadURL().then((url) => {\n        console.log(url);\n        const newInventory = {\n          category: item.category,\n          description: item.description,\n          image_url: url,\n          on_order: 0,\n          sales_price: item.price,\n          size_stock: {},\n          sizes: [],\n          stock: item.quantity,\n        };\n\n        firebase.firestore().collection(\"inventory\").add(newInventory);\n      });\n    });\n  };\n\n  // Function to update the quantity of an item in cart\n  onChange = (itemId, direction) => {\n    const cart = this.state.currentCart;\n    const currentCart = cart[itemId] ? cart[itemId] : 0;\n    const stock = this.state.data[itemId].stock;\n    let updatedCount =\n      currentCart + direction < 0 ? 0 : currentCart + direction;\n    if (updatedCount > stock) {\n      updatedCount = stock;\n      alert(\"Cannot add item to cart. Max stock of item reached.\");\n    }\n    cart[itemId] = updatedCount;\n    this.setState({ cart });\n  };\n\n  // Function to calculate the total number of items in cart\n  calculateNumItems = (currentCart, items) => {\n    let total = 0;\n\n    Object.keys(items).forEach((key) => {\n      total += currentCart[key] ? currentCart[key] : 0;\n    });\n\n    return total;\n  };\n\n  // Function to calculate total price of items in cart\n  calculateTotalPrice = (currentCart, items) => {\n    let total = 0;\n\n    Object.keys(items).forEach((key) => {\n      total +=\n        items[key].sales_price * (currentCart[key] ? currentCart[key] : 0);\n    });\n\n    return total.toFixed(2);\n  };\n\n  // Function to update the quantity of an item in stock (admin only)\n  // THIS DOESN'T FULLY WORK LOL\n  updateStock = (itemId, direction) => {\n    const data = this.state.data;\n    const currentStock = this.state.data[itemId].stock;\n    let updatedCount =\n      currentStock + direction < 0 ? 0 : currentStock + direction;\n    data[itemId].stock = updatedCount;\n    //need to actually update firebase\n    console.log(data[itemId].stock);\n    this.setState({ data });\n  };\n\n  logOut = () => {\n    console.log(\"log out\");\n    firebase.auth().signOut();\n  };\n\n  logIn = () => {\n    console.log(\"log in\");\n    firebase.auth().signInWithRedirect(provider);\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar\n          items={this.state.data}\n          currentCart={this.state.currentCart}\n          calculateTotalPrice={this.calculateTotalPrice}\n          calculateNumItems={this.calculateNumItems}\n          logIn={this.logIn}\n          logOut={this.logOut}\n          auth={this.state.auth}\n        />\n        <div className=\"gradient-divide\"></div>\n        <Route\n          exact\n          path=\"/\"\n          render={(props) => (\n            <Shop\n              items={this.state.data}\n              currentCart={this.state.currentCart}\n              auth={this.state.auth}\n              adminEmailList={this.state.adminEmailList}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/signin\"\n          render={() => (\n            <SignIn\n              items={this.state.data}\n              currentCart={this.state.currentCart}\n            />\n          )}\n        />\n        <Route\n          path=\"/cart\"\n          render={(props) => (\n            <Cart\n              {...props}\n              items={this.state.data}\n              currentCart={this.state.currentCart}\n              onChange={this.onChange}\n              calculateTotalPrice={this.calculateTotalPrice}\n              calculateNumItems={this.calculateNumItems}\n            />\n          )}\n        />\n\n        <Route\n          path=\"/user\"\n          render={(props) => (\n            <UserUI\n              {...props}\n              items={this.state.data}\n              orders={this.state.orders}\n            />\n          )}\n        />\n        <Route\n          path=\"/admin\"\n          render={(props) => (\n            <AdminUI\n              {...props}\n              items={this.state.data}\n              updateStock={this.updateStock}\n            />\n          )}\n        />\n\n        <Route\n          path=\"/addmerch\"\n          render={(props) => (\n            <AddMerch {...props} firebasePush={this.firebasePush} />\n          )}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n      //authRedirectPath: state.auth.authRedirectPath\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onPullShopItems: () => dispatch(actions.pullShopItems())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopHome);\n"]},"metadata":{},"sourceType":"module"}