{"ast":null,"code":"import _defineProperty from\"/Users/Abhinav/Documents/GitHub/saasshop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/Abhinav/Documents/GitHub/saasshop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as actionTypes from'../actions/actionTypes';import{updateObject}from'../utility';import firebase from\"../../firebase/firebase\";var initialState={items:{},cart:{}};var pullShopItems=function pullShopItems(state,action){console.log(action.data);return updateObject(state,{items:action.data});};var addItem=function addItem(state,action){console.log(action.size);var updatedAmount=0;if(state.cart[action.itemID]&&state.cart[action.itemID][action.size]){updatedAmount=parseInt(state.cart[action.itemID][action.size])+parseInt(action.amount);}else{updatedAmount=parseInt(action.amount);}return updateObject(state,_objectSpread({},state,{cart:_objectSpread({},state.cart,_defineProperty({},action.itemID,_objectSpread({},state.cart[action.itemID],_defineProperty({},action.size,updatedAmount))))}));};var shopReducer=function shopReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case actionTypes.PULL_SHOP_ITEMS:return pullShopItems(state,action);case actionTypes.ADD_ITEM:return addItem(state,action);default:return state;}};export default shopReducer;","map":{"version":3,"sources":["/Users/Abhinav/Documents/GitHub/saasshop/client/src/store/reducers/shop.js"],"names":["actionTypes","updateObject","firebase","initialState","items","cart","pullShopItems","state","action","console","log","data","addItem","size","updatedAmount","itemID","parseInt","amount","shopReducer","type","PULL_SHOP_ITEMS","ADD_ITEM"],"mappings":"6UAAA,MAAO,GAAKA,CAAAA,WAAZ,KAA6B,wBAA7B,CACA,OAASC,YAAT,KAA6B,YAA7B,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CAEA,GAAMC,CAAAA,YAAY,CAAC,CACfC,KAAK,CAAC,EADS,CAEfC,IAAI,CAAC,EAFU,CAAnB,CAKA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACrCC,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB,EACA,MAAOV,CAAAA,YAAY,CAACM,KAAD,CAAQ,CAAEH,KAAK,CAAEI,MAAM,CAACG,IAAhB,CAAR,CAAnB,CACD,CAHH,CAKA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACL,KAAD,CAAQC,MAAR,CAAmB,CAC/BC,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACK,IAAnB,EACA,GAAIC,CAAAA,aAAa,CAAG,CAApB,CACA,GAAIP,KAAK,CAACF,IAAN,CAAWG,MAAM,CAACO,MAAlB,GAA6BR,KAAK,CAACF,IAAN,CAAWG,MAAM,CAACO,MAAlB,EAA0BP,MAAM,CAACK,IAAjC,CAAjC,CAAwE,CACpEC,aAAa,CAAEE,QAAQ,CAACT,KAAK,CAACF,IAAN,CAAWG,MAAM,CAACO,MAAlB,EAA0BP,MAAM,CAACK,IAAjC,CAAD,CAAR,CAAmDG,QAAQ,CAACR,MAAM,CAACS,MAAR,CAA1E,CACH,CAFD,IAEK,CACDH,aAAa,CAAGE,QAAQ,CAACR,MAAM,CAACS,MAAR,CAAxB,CACH,CACD,MAAOhB,CAAAA,YAAY,CAAEM,KAAF,kBACZA,KADY,EAEfF,IAAI,kBACGE,KAAK,CAACF,IADT,oBAECG,MAAM,CAACO,MAFR,kBAGOR,KAAK,CAACF,IAAN,CAAWG,MAAM,CAACO,MAAlB,CAHP,oBAIKP,MAAM,CAACK,IAJZ,CAImBC,aAJnB,IAFW,GAAnB,CAUH,CAlBD,CAqBA,GAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAoC,IAAlCX,CAAAA,KAAkC,2DAA1BJ,YAA0B,IAAZK,CAAAA,MAAY,2CACpD,OAASA,MAAM,CAACW,IAAhB,EACI,IAAKnB,CAAAA,WAAW,CAACoB,eAAjB,CAAkC,MAAOd,CAAAA,aAAa,CAACC,KAAD,CAAOC,MAAP,CAApB,CAClC,IAAKR,CAAAA,WAAW,CAACqB,QAAjB,CAA2B,MAAOT,CAAAA,OAAO,CAACL,KAAD,CAAQC,MAAR,CAAd,CAC3B,QACI,MAAOD,CAAAA,KAAP,CAJR,CAMH,CAPD,CASA,cAAeW,CAAAA,WAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nimport firebase from \"../../firebase/firebase\";\n\nconst initialState={\n    items:{},\n    cart:{}\n}\n\nconst pullShopItems = (state, action) => {\n    console.log(action.data)\n    return updateObject(state, { items: action.data });\n  };\n\nconst addItem = (state, action) => {\n    console.log(action.size)\n    let updatedAmount = 0\n    if (state.cart[action.itemID] && state.cart[action.itemID][action.size]){\n        updatedAmount= parseInt(state.cart[action.itemID][action.size]) + parseInt(action.amount)\n    }else{\n        updatedAmount = parseInt(action.amount)\n    }\n    return updateObject( state, {\n        ...state,\n        cart: {\n            ...state.cart,\n            [action.itemID]: {\n                ...state.cart[action.itemID],\n                [action.size]: updatedAmount\n            }\n        }\n    });\n};\n\n\nconst shopReducer = ( state = initialState, action ) => {\n    switch ( action.type ) { \n        case actionTypes.PULL_SHOP_ITEMS: return pullShopItems(state,action);\n        case actionTypes.ADD_ITEM: return addItem(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default shopReducer;"]},"metadata":{},"sourceType":"module"}